import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

/**
 * Example of parsing a JSON message received via MQTT
 * Source: https://github.com/openhab/openhab/wiki/JSON-Transformations
 */
rule "AirboardMqttPublisherParser"
  when
    Item AirboardMqttPublisher changed
  then
    var String json = (AirboardMqttPublisher.state as StringType).toString
    // {'measurement' : {'sensor' : 'dht22', 'status': 'OK', 'temperature': random.uniform(20.0, 30.0), 'humidity': random.uniform(15.0, 50.0)}})
    // {"_type": "location", "lat": "47.5010314", "lon": "8.3444293",
    //    "tst": "1422616466", "acc": "21.05", "batt": "40"}
    // following from https://github.com/openhab/openhab/wiki/Transformations
    //var String json = '{"store":{"book":[{"category":"reference","author":"Nigel Rees","title": "Sayings of the Century", "price": 8.95  } ],  "bicycle": { "color": "red",  "price": 19.95} }}'
    //var test = transform("JSONPATH","$.store.book[0].author",json)
    //println(test)
//    var String measurement = transform("JSONPATH", "$.measurement", json)
//    println(measurement)
//    if (measurement != NULL && measurement.length() > 0)
//    {
      var String sensor = transform("JSONPATH", "$.measurement.sensor", json)
      println(sensor)
      if (sensor == "dht22")
      {
        var String status  = transform("JSONPATH", "$.measurement.status", json)
        sendCommand(AirboardMqttPublisherDhtt22Status,  status)
        if (status == "OK") {
          var String temperature  = transform("JSONPATH", "$.measurement.temperature", json)
          var String humidity  = transform("JSONPATH", "$.measurement.humidity", json)

          sendCommand(AirboardMqttPublisherDhtt22Temp, temperature)
          sendCommand(AirboardMqttPublisherDhtt22Hum,   humidity)
        }
      }
//    }
  end
